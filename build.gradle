plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.1"
    id("com.google.cloud.tools.jib") version "3.4.0"
}

version = "0.1"
group = "com.sarvex"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.sarvex.*")
    }
}

dependencies {
    annotationProcessor("io.dekorate:jaeger-annotations")
    annotationProcessor("io.dekorate:knative-annotations")
    annotationProcessor("io.dekorate:kubernetes-annotations")
    annotationProcessor("io.dekorate:prometheus-annotations")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    implementation("io.dekorate:jaeger-annotations")
    implementation("io.dekorate:knative-annotations")
    implementation("io.dekorate:kubernetes-annotations")
    implementation("io.dekorate:prometheus-annotations")
    implementation("io.micronaut.discovery:micronaut-discovery-client")
    implementation("io.micronaut.elasticsearch:micronaut-elasticsearch")
    implementation("io.micronaut.graphql:micronaut-graphql")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut.nats:micronaut-nats")
    implementation("io.micronaut.r2dbc:micronaut-data-r2dbc")
    implementation("io.micronaut.r2dbc:micronaut-r2dbc-core")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-tracing")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("javax.annotation:javax.annotation-api")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("io.jaegertracing:jaeger-thrift")
    runtimeOnly("io.r2dbc:r2dbc-h2")

    testImplementation("org.assertj:assertj-core")
    testImplementation("org.hamcrest:hamcrest")
}


application {
    mainClass.set("com.sarvex.Application")
}

jib {
    to {
        image = "gcr.io/myapp/jib-image"
    }
}
